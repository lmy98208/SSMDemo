<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="jdbc.properties"/>

    <!-- mysql-jdbc驱动地址 -->
    <!--<classPathEntry location="D:/work/jar/mysql-connector-java-5.1.29.jar"/>-->
    <classPathEntry location="E:/intellij/.m2/repository/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar"/>
    <context id="context1">
        <!-- 生成的pojo，将implements Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <commentGenerator>
            <property name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!-- 连接数据库 -->
        <jdbcConnection
                driverClass="${jdbc.driver}"
                connectionURL="${jdbc.url}"
                userId="${jdbc.username}"
                password="${jdbc.password}"
        />

        <!--  默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
           true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
       -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>


        <!-- !!!! Model Configurations !!!! -->
        <!-- 模型配置  文件名前后拼接-->
        <javaModelGenerator targetPackage="com.njnu.bean" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- !!!! Mapper XML Configurations !!!! -->
        <!--  生成表xml配置  -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- !!!! Mapper Interface Configurations !!!! -->
        <!-- dao配置 -->
        <javaClientGenerator targetPackage="com.njnu.dao" targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>




        <!--
            schema即为数据库名 tableName为对应的数据库表
            domainObjectName是要生成的实体类
             enable*ByExample 是否生成 example类   -->
        <!-- <table schema="" tableName="user" domainObjectName="User"
            enableCountByExample="false" enableUpdateByExample="false"
            enableDeleteByExample="false" enableSelectByExample="false"
            selectByExampleQueryId="false"
            >
            注意，该属性只针对MyBatis3Simple有用；
                    如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；

            <property name="selectAllOrderByClause" value="id desc"/>
            用于指定生成实体类时是否使用实际的列名作为实体类的属性名
                    true:使用数据库中实际的字段名字作为生成的实体类的属性名
                    false:默认值,转换为Camel Case风格作为生成的实体类的属性名
            <property name="useActualColumnNames" value="true" />
        </table>
         -->

        <!--<table schema="" tableName="category" domainObjectName="Category"-->
        <!--enableCountByExample="false" enableUpdateByExample="false"-->
        <!--enableDeleteByExample="false" enableSelectByExample="false"-->
        <!--selectByExampleQueryId="false"-->
        <!--&gt;-->
        <!--<property name="selectAllOrderByClause" value="id desc"/>-->
        <!--<property name="useActualColumnNames" value="false" />-->
        <!--</table>-->
        <!--<table schema="" tableName="book" domainObjectName="Book"-->
        <!--enableCountByExample="false" enableUpdateByExample="false"-->
        <!--enableDeleteByExample="false" enableSelectByExample="false"-->
        <!--selectByExampleQueryId="false"-->
        <!--&gt;-->
        <!--<property name="selectAllOrderByClause" value="id desc"/>-->
        <!--<property name="useActualColumnNames" value="false" />-->
        <!--</table>-->

    </context>
</generatorConfiguration>